{
	// Place your snippets for shellscript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

		"Add Shebang": {
			"scope": "sh",
			"prefix": "shebang",
			"body": [
				"#!/bin/bash",
			],
			"description": "Adds Shebang Script Head"
		}

		"User Prompt": {
			"scope": "sh",
			"prefix": "promptuser",
			"body": [
				"read -p 'The prompt text goes hear: ' var",
			],
			"description": "Adds User Prompt"
		}

		"Add And-Or Tripple Test": {
			"scope": "sh",
			"prefix": "andortriple",
			"body": [
				"if [[ {andtest} ]] && ( [[ {or_option1} ]]) || [[ {or_option2} ]] ); then",
				"#Code if true",
				"else",
					"#code if false",
				"fi",
			],
			"description": "Adds IF-ELSE test with one AND and two OR Options"
		}

//		"Add Colour Code text":{
//			"scope": "sh",
//			"prefix": "Colour_Black",
//			"body": [
//				"\033[30m{input_word}\033[0m",
//			],
//			"description": "Add black colour text"
//		}

//		"Add Colour Code text":{
//			"scope": "sh",
//		"prefix": "Colour_Red",
//			"body": [
//				"\033[31m{input_word}\033[0m",
//			],
//			"description": "Add red colour text"
//		}

//		"Add Colour Code text":{
//			"scope": "sh",
//			"prefix": "Colour_Green",
//			"body": [
//				"\033[32m{input_word}\033[0m",
//			],
//			"description": "Add black green text"
//		}

//		"Add Colour Code text":{
//			"scope": "sh",
//			"prefix": "Colour Brown",
//			"body": [
//				"\033[33m{input_word}\033[0m",
//			],
//			"description": "Add brown colour text"
//		}

//		"Add Colour Code text":{
//			"scope": "sh",
//			"prefix": "Colour Blue",
//			"body": [
//				"\033[34m{input_word}\033[0m",
//			],
//			"description": "Add Blue colour text"
//		}

//		"Add Colour Code text":{
//			"scope": "sh",
//			"prefix": "Colour_Purple",
//			"body": [
//				"\033[35m{input_word}\033[0m",
//			],
//			"description": "Add purple colour text"
//		}
//
//		"Add Colour Code text":{
//			"scope": "sh",
//			"prefix": "Colour_Cyan",
//			"body": [
//				"\033[36m{input_word}\033[0m",
//			],
//			"description": "Add cyan colour text"
//		}
//
//		"Add Colour Code text":{
	//			"scope": "sh",
	//			"prefix": "Colour_Grey",
	//			"body": [
		//				"\033[37m{input_word}\033[0m",
		//			],
		//			"description": "Add grey colour text"
			//		}


				"Add colours": {
					"scope": "sh",	
					"prefix": "colours",
					"body": [
				"black='\\033[30m'",
				"red='\\033[31m'",
				"green='\\033[32m'",
				"brown='\\033[33m'",
				"blue='\\033[34m'",
				"purple='\\033[35m'",
				"cyan='\\033[36m'",
				"grey='\\033[37m'",
			],
					"description": "Adds code for colours in bash"
			},
			//	"Test for a valid IP address": {
			//		"scope":"sh",
			//		"prefix": "ip",
			//		"body":[
			//			"if [[ \"$ip\" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; then",
			//			":",
			//			"else",
			//			":",
			//			"fi"
			//		],
			//		"description": "Uses regex for testing valid ip addresses"
			}



}